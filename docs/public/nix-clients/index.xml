<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OrangeFS Clients on OrangeFS Documentation</title>
    <link>/nix-clients/</link>
    <description>Recent content in OrangeFS Clients on OrangeFS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/nix-clients/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pvfs2tab</title>
      <link>/nix-clients/pvfs2tab-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/pvfs2tab-file/</guid>
      <description>Each client must know where to access OrangeFS resources. The pvfs2tab file, similar to the /etc/fstab file in Linux, provides clients with this access information. It involves creating a file at a designated path, which will function as the gateway to your OrangeFS installation.
 Determine the URL of the OrangeFS server you will access.  You can retrieve this information from the orangefs-server.conf file. For example, the first URL listed in that file can be extracted with the following command:</description>
    </item>
    
    <item>
      <title>Linux Kernel Module</title>
      <link>/nix-clients/linux-kernel-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/linux-kernel-module/</guid>
      <description>The Kernel Module enables access to OrangeFS through the native Linux IO interfaces. Starting with the Linux Kernel verwsion 4.6, OrangeFS is available natively in the kernel source. The code that is upstream is recommended for kernel IO, the OrangeFS team has focused on improving the up stream module for several years thus it is recommended to use this version vs. the one that is in the orangefs repo.
   Linux Kernel Version Features     4.</description>
    </item>
    
    <item>
      <title>Linux Direct Interface</title>
      <link>/nix-clients/direct-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/direct-interface/</guid>
      <description>The Direct Interface allows you to access OrangeFS in a cluster similar to Linux (POSIX-based); however, the Direct Interface (also known by usrint, the system folder in which it is stored) bypasses the Linux Kernel for a more direct and better performing path to OrangeFS. It provides high performance access for programs that are not written for MPI.
Important The OrangeFS Direct Interface using Global Configuration will work only on systems configured with shared C libraries.</description>
    </item>
    
    <item>
      <title>Linux ROMIO MPI Interface</title>
      <link>/nix-clients/romio-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/romio-interface/</guid>
      <description>ROMIO is a particular implementation of the MPI-IO protocol, the open standard for data transfer to and from MPI.
MPI, also an open standard, was created for researchers who needed a message-passing interface optimized for high performance parallel computing.
Different working implementations for MPI, also called MPI libraries, exist. Two popular MPI libraries are MPICH from Argonne National Laboratory and Open MPI from a consortium of users including Oak Ridge National Laboratory.</description>
    </item>
    
    <item>
      <title>Linux Client Advanced Security Modes</title>
      <link>/nix-clients/advanced-linux-client-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/advanced-linux-client-security/</guid>
      <description>After you copy the OrangeFS installation directory, you must perform additional setup and configuration for the advanced key-based and certificate-based security modes.    For key-based security, most of this work can be done once on the build system, then copied later to your servers and clients.
This topic includes sections for setting up two types of security:</description>
    </item>
    
    <item>
      <title>FUSE Client</title>
      <link>/nix-clients/fuse-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/fuse-client/</guid>
      <description>Filesystem in Userspace (FUSE) is a loadable kernel module for UNIX-like computer operating systems that lets non-privileged users create their own file systems without editing kernel code. File system code is run in user space while the FUSE module provides only a bridge to the actual kernel interfaces.
The OrangeFS client interface for FUSE enables access to an OrangeFS file system from a Mac.
*Note* While FUSE can run on both Linux and Mac.</description>
    </item>
    
    <item>
      <title>Hadoop Client</title>
      <link>/nix-clients/hadoop_installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/nix-clients/hadoop_installation/</guid>
      <description>Apache Hadoop is an open source framework that supports data-intensive distributed applications. Hadoop has many parts, but two are fundamental:
 MapReduce is the framework that understands and assigns work to the nodes in a cluster. MapReduce divides the application into many fragments of work, each of which can be executed or re-executed on any node in the cluster.
 HDFS (Hadoop File System) spans all the nodes in a Hadoop cluster for data storage.</description>
    </item>
    
  </channel>
</rss>