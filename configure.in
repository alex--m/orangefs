dnl **************************************************************
dnl PVFS2 AUTOCONF SCRIPT
dnl
dnl Process this file with autoconf to produce a configure script.
dnl You may need to use autoheader as well if changing any DEFINEs

dnl sanity checks, output header, location of scripts used here
AC_INIT(include/pvfs2-types.h)
AC_CONFIG_HEADER(pvfs2-config.h)
AC_CONFIG_AUX_DIR(maint/config)

dnl Checks for host type
dnl Ensures we can compile on this OS
AC_CANONICAL_HOST
AC_MSG_CHECKING(whether we know how to compile for this OS)
if test x$host_os != xlinux-gnu; then AC_MSG_ERROR($host_os not supported.)
else AC_MSG_RESULT(yes)
fi

dnl Check for utilities that we need during the build process
AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_CPP
AC_CHECK_PROG(HAVE_PERL, perl, yes, no)
AC_CHECK_PROG(HAVE_FIND, find, yes, no)
AC_CHECK_PROG(HAVE_BISON, bison, yes, no)
AC_CHECK_PROG(HAVE_FLEX, flex, yes, no)

dnl Options for debugging
dnl This particular one enables tracing of memory allocation and
dnl    freeing with the mtrace tool
AC_ARG_WITH(mtrace,
[  --with-mtrace                  Use mtrace for detecting memory leaks (must setenv MALLOC_TRACE).],
CFLAGS="$CFLAGS -imcheck.h"
AC_DEFINE(WITH_MTRACE, 1, Define if mtrace memory leak detection was enabled)
)

dnl See if we have a new enough version of Berkeley DB; needed for
dnl    compilation of trove-dbpf component
AC_MSG_CHECKING(whether version of Berkeley DB is new enough)
	AC_TRY_COMPILE([
	#include <db.h>
	], [
	#if DB_VERSION_MAJOR < 4
		#error "DB_VERSION_MAJOR < 4; need newer Berkeley DB implementation"
	#endif
	], AC_MSG_RESULT(yes),
	AC_MSG_RESULT(no)
		AC_MSG_ERROR(Need newer (4.x.x or later) version of Berkeley DB.
 try: http://www.sleepycat.com/download/index.shtml
 or: /parl/pcarns/rpms/db4-4.0.14-1mdk.src.rpm (to build rpm))
	)

dnl Test to check for txnid parameter to DB open (DB4.1+)
AC_MSG_CHECKING(for txnid parameter to DB open function)
AC_TRY_COMPILE([
#include <db.h>
], [
int ret;
DB *db;
DB_TXN *txnid;
char *file;
char *database;
DBTYPE type;
u_int32_t flags;
int mode;

ret = db->open(db, txnid, file, database, type, flags, mode);
], AC_MSG_RESULT(yes)
AC_DEFINE(HAVE_TXNID_PARAMETER_TO_DB_OPEN, 1,
Define if DB open function takes a txnid parameter),
AC_MSG_RESULT(no))


dnl output final version of top level makefile and subdirectory
dnl    makefile includes
AC_OUTPUT(Makefile
src/io/trove/module.mk
src/io/trove/trove-handle-mgmt/module.mk
src/io/trove/trove-dbpf/module.mk
src/common/quickhash/module.mk
src/common/quicklist/module.mk
src/common/dotconf/module.mk
src/common/id-generator/module.mk
src/common/gossip/module.mk
src/common/gen-locks/module.mk
src/common/llist/module.mk
src/common/statecomp/module.mk
src/io/bmi/module.mk
src/io/bmi/bmi_tcp/module.mk
src/io/description/module.mk
src/io/flow/module.mk
src/io/flow/flowproto-bmi-trove/module.mk
src/io/flow/flowproto-template/module.mk
src/io/job/module.mk
src/proto/module.mk
src/server/module.mk
src/server/request-scheduler/module.mk
src/client/sysint/module.mk
src/client/unix-io/module.mk
src/proto/module.mk
src/proto/contig/module.mk
test/io/trove/module.mk
test/common/quicklist/module.mk
test/common/id-generator/module.mk
test/common/gossip/module.mk
test/common/gen-locks/module.mk
test/io/bmi/module.mk
test/io/description/module.mk
test/io/flow/module.mk
test/io/job/module.mk
test/client/sysint/module.mk
test/proto/module.mk
test/server/module.mk
doc/coding/module.mk
doc/design/module.mk
)

