DIR := test/correctness/pts

TEST_PTS_SRC := $(DIR)/pts.c

TEST_PTS_MISC := \
	$(DIR)/create.c \
	$(DIR)/generic-parser.c \
	$(DIR)/pvfs-helper.c \
	$(DIR)/test-pvfs-datatype-init.c \
	$(DIR)/test-pvfs-datatype-contig.c \
	$(DIR)/test-pvfs-datatype-vector.c \
	$(DIR)/test-pvfs-datatype-hvector.c \
	$(DIR)/test-lookup-bench.c \
	$(DIR)/test-dir-operations.c \
	$(DIR)/test-dir-torture.c \
	$(DIR)/test-null-params.c \
	$(DIR)/pvfs-restart-server.c \
	$(DIR)/pvfs-stop-server.c \
	$(DIR)/null-params-parser.c \
	$(DIR)/test-invalid-files.c \
	$(DIR)/test-uninitialized.c \
	$(DIR)/test-finalized.c \
	$(DIR)/test-misc.c \
	$(DIR)/test-concurrent-meta.c \
	$(DIR)/test-request-indexed.c

MPIMISCSRC += $(TEST_PTS_MISC)

MPITESTSRC += $(TEST_PTS_SRC)


LOCALMPITESTS := $(patsubst %.c,%, $(TEST_PTS_SRC))
LOCALMPIOBJS := $(patsubst %.c,%.o, $(TEST_PTS_MISC))
$(LOCALMPITESTS): %: %.o $(LOCALMPIOBJS) lib/libpvfs2.a
ifdef QUIET_COMPILE
	@echo "  MPILD		$@"
	@$(MPICC) $^ $(LDFLAGS) $(LIBS) -o $@
else
	$(MPICC) $^ $(LDFLAGS) $(LIBS) -o $@
endif
