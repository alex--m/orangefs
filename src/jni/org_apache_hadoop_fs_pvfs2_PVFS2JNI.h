/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_apache_hadoop_fs_pvfs2_PVFS2JNI */

#ifndef _Included_org_apache_hadoop_fs_pvfs2_PVFS2JNI
#define _Included_org_apache_hadoop_fs_pvfs2_PVFS2JNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1init
  (JNIEnv *, jclass);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_lookup
 * Signature: (Ljava/lang/String;Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1lookup
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_create
 * Signature: (Ljava/lang/String;Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1create
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_read
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;[BJJ)I
 */
JNIEXPORT jint JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1read
  (JNIEnv *, jclass, jobject, jbyteArray, jlong, jlong);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_write
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;[BJJ)I
 */
JNIEXPORT jint JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1write
  (JNIEnv *, jclass, jobject, jbyteArray, jlong, jlong);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_flush
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1flush
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_truncate
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1truncate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_getFilesize
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1getFilesize
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_getBlocksize
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1getBlocksize
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_getAttribute
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;Lorg/apache/hadoop/fs/pvfs2/PVFS2Attribute;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1getAttribute
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_setOwner
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;JJ)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1setOwner
  (JNIEnv *, jclass, jobject, jlong, jlong);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_setPermissions
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/PVFS2ObjectReference;J)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1setPermissions
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_listFiles
 * Signature: (Ljava/lang/String;Ljava/util/ArrayList;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1listFiles
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_rename
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1rename
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_mkdir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1mkdir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_rm
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1rm
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_mount
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1mount
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_generateHint
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/Hint;Ljava/lang/String;JJ)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1generateHint
  (JNIEnv *, jclass, jobject, jstring, jlong, jlong);

/*
 * Class:     org_apache_hadoop_fs_pvfs2_PVFS2JNI
 * Method:    native_generateLayout
 * Signature: (Lorg/apache/hadoop/fs/pvfs2/Layout;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_fs_pvfs2_PVFS2JNI_native_1generateLayout
  (JNIEnv *, jclass, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif

