/* 
 * (C) 2003 Clemson University and The University of Chicago 
 *
 * See COPYING in top-level directory.
 */

/* pvfs2_client_msgpairarray_explicit_sm
 *
 * Exactly like msgpairarray_sm, except that the server addresses
 * are specified in advance rather than resolved from handle/fsid
 */

#include <string.h>
#include <assert.h>

#include "client-state-machine.h"
#include "state-machine-fns.h"
#include "job.h"

extern job_context_id pint_client_sm_context;

enum {
    MSGPAIRS_COMPLETE = 1
};

extern int msgpairarray_post(PINT_client_sm *sm_p, job_status_s *js_p);
extern int msgpairarray_complete(PINT_client_sm *sm_p, job_status_s *js_p);
extern int msgpairarray_completion_fn(PINT_client_sm *sm_p, job_status_s *js_p);
extern int msgpairarray_error(PINT_client_sm *sm_p, job_status_s *js_p);

/* WARNING: don't change the state transitions here, unless you also change
 * msgpairarray.sm
 */

%%

nested machine pvfs2_client_msgpairarray_explicit_sm(post,
    complete,
    completion_fn,
    error)
{
    state post {
	run msgpairarray_post;
	success => complete;
	default => error;
    }

    state complete {
	run msgpairarray_complete;
	success => complete;
	MSGPAIRS_COMPLETE => completion_fn;
	default => return;
    }
    state completion_fn {
	run msgpairarray_completion_fn;
	default => return;
    }
    
    state error {
	run msgpairarray_error;
	default => return;
    }
}

%%

/*
 * Local variables:
 *  mode: c
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 noexpandtab
 */
