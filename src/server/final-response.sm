/* 
 * (C) 2001 Clemson University and The University of Chicago 
 *
 * See COPYING in top-level directory.
 */


#include <string.h>
#include <assert.h>

#include "server-config.h"
#include "pvfs2-server.h"
#include "pvfs2-attr.h"

/* final-response state machine:
 * This is a nested state machine that performs two primary tasks:
 * - releases the operation from the request scheduler
 * - sends a response to the client
 */

/* TODO: document pre and post conditions (what server_op fields do we
 * require, and which ones do we modify?
 */

/* TODO: remember to check error code from release at top of send_resp? */

static int final_response_release(PINT_server_op *s_op, job_status_s *js_p);
static int final_response_send_resp(PINT_server_op *s_op, job_status_s *js_p);

extern PINT_server_trove_keys_s Trove_Common_Keys[];
extern job_context_id PINT_server_job_context;

%%

nested machine pvfs2_final_response_sm(release, send_resp)
{
    state release
    {
	run final_response_release;
	default => send_resp;
    }

    state send_resp
    {
	run final_response_send_resp;
	default => return;
    }
}


%%

/* final_response_release()
 *
 * releases the operation from the request scheduler
 */
static int final_response_release(PINT_server_op *s_op, job_status_s *js_p)
{
    js_p->error_code = 0;
    return(1);
}

/* final_response_send_resp()
 *
 * sends a response to the client
 */
static int final_response_send_resp(PINT_server_op *s_op, job_status_s *js_p)
{
    js_p->error_code = 0;
    return(1);
}


/*
 * Local variables:
 *  mode: c
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 noexpandtab
 */

