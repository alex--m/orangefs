/* 
 * (C) 2003 Clemson University and The University of Chicago 
 *
 * See COPYING in top-level directory.
 */
#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>

#include "server-config.h"
#include "pvfs2-server.h"

static int truncate_resize(
    PINT_server_op *s_op, job_status_s *js_p);
static int truncate_check_error(
    PINT_server_op *s_op, job_status_s *js_p);
static int truncate_cleanup(
    PINT_server_op *s_op, job_status_s *js_p);

%%

machine pvfs2_truncate_sm
{
    state prelude
    {
        jump pvfs2_prelude_sm;
        success => resize;
        default => final_response;
    }
    
    state resize
    {
        run truncate_resize;
        default => check_error;
    }

    state check_error
    {
        run truncate_check_error;
        default => final_response;
    }
        
    state final_response
    {
        jump pvfs2_final_response_sm;
        default => cleanup;
    }
    
    state cleanup
    {
        run truncate_cleanup;
        default => terminate;
    }
}

%%

static int truncate_resize(
    PINT_server_op *s_op, job_status_s *js_p)
{
    int ret = -PVFS_EINVAL;
    job_id_t i;

    ret = job_trove_bstream_resize(
        s_op->req->u.truncate.fs_id, s_op->req->u.truncate.handle,
        s_op->req->u.truncate.size, s_op->req->u.truncate.flags,
        NULL, s_op, 0, js_p, &i, server_job_context);

    return ret;
}

static int truncate_check_error(
    PINT_server_op *s_op, job_status_s *js_p)
{
    return 1;
}

static int truncate_cleanup(
    PINT_server_op *s_op, job_status_s *js_p)
{
    return (server_state_machine_complete(s_op));
}

/*
 * Local variables:
 *  mode: c
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */
