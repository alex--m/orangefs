-----------------------
PVFS2 Release ChangeLog
-----------------------


pvfs2-0.1.2
===========
- BMI IB module:
    - fix bug resulting in mixed-up connections
    - clean up incoming message processing
    - refactor test and testcontext code
    - simplify state machine
- add shared and static libraries build options
- honor PVFS2_DEBUGFILE environment variable in client
- Kernel module builds:
    - build the module with everything else, if configured
    - clean up properly
    - work out-of-tree
- Build system:
    - list explicit include directories
    - add cflags provided by module makefile stubs
    - install kernel module if configured
    - simplify dependency generator script, add .po
- BMI: initialize needed methods dynamically, not at startup
- add ability to force use of alternative pvfs2tab file at run time
- general cleanup of API used for system interface initialization,
  including tabfile parsing
- added reserved value for fsid type to indicate uninitialized value
- BMI and flow interfaces now accept NULL list of modules to initialize
  defaults, BMI interprets this by delaying init of modules until
  needed, flow interface interprets by initializing all possible modules
- new api functions for resolving local file system paths
- added ability to dynamically add and remove file systems from the
  system interface at run time
- fix request scheduler bug that was leading to odd behavior under heavy
  I/O load
- added some scripts started by Wes Emeneker to automated the steps
  needed to download and build ROMIO with PVFS2 support
- re-enable compilation of Jiesheng's caching flow protocol
- added new automated nightly test scripts started by Wes Emeneker into 
  test/automated subdir
- started running automated tests on Adenine cluster at Clemson 
  as a nightly cron job
- isolated a request processing corner case with a test program
- renamed PVFS_pinode_reference -> PVFS_object_ref to cleanup the system
  interface a little further
- added some first stubs for hooks to specify distribution parameters at
  runtime
- added more specific server and client side debugging keywords
- enhanced vfs error reporting
- client sysint cleanups and error reporting improvements
- server operation cleanups and error reporting improvements
- bmi error code translation hooks to work properly with pvfs2 error codes
- fixed mmap-ra-cache bug that didn't flush data at the right times
- made the mmap readahead cache functionality a configure option
  (enabled by default)
- fixed vfs bug that caused multiple processes accessing the same file
  trigger a SIGBUS on file close
- enhanced vfs test pvfs2-shell-test.sh to test a tricky case of filling
  and emptying the page cache repeatedly in a worst case scenario
- start client sysint thread safety by making accesses to the global
  configuration object serialized
- reworked the vfs statfs method to not cause overflows on some kernels
- re-introduced a client sysint lookup optimization to work with the
  overhauled client lookup operation
- fixed size reporting of symlinks in pvfs2-ls program
- fixed vfs getattr calls for directories and symlinks
- added an experimental testbed program for testing threaded client sysint
  operations based on the pvfs2-client-core (called
  pvfs2-threaded-client-core)
- mostly consolidated credential generation to one place
- modified the kernel mount and initialization to use the dynamic mount
  system, where a server and file system name is specific on the mount
  command line (no more hard coded coll_id and root_handle!)
- fixed a particularly nasty vfs race bug that could crash the kernel
  during writes
- fixed a vfs bug that could cause a client to think a file did not exist
  when in fact it did
- added full support for dynamic vfs mount (which breaks the old way of
  mounting, but is more convenient and makes more sense)
- Better documentation for building MPICH2+ROMIO+PVFS2


pvfs2-0.1.1
===========
- can now specify Trove sync behavior when setting up PVFS2 volumes w/ pav
- added a new mpi-io test to exercise ROMIO's scalable operations
- better detection of dead sockets in BMI TCP/IP module
- fixed pvfs2tab file parsing bug
- completely rewritten TCP/IP socket management
- fixed potential server deadlock on shutdown bugs
- fixed vfs bug that stalled the server on signal cancelled operations
- enhance vfs support to ignore non-fatal signals caught while waiting for
  a remote operation to complete
- added support for the "intr" mount option to allow any signal to
  interrupt remote operations (similar to the nfs option)
- enhanced test/kernel/linux-2.6/pvfs2-shell-test.sh test script to test
  mmap reads and allow more run-time flexibility


pvfs2-0.1.0
===========
- initial support for logging traces with both MPE and Pablo libraries
- fix some warnings on x86-64
- work around older Berkeley-DB versions w/o support for DB_DIRTY_READ
- implementation of cancel() in BMI, Trove, Flow, and thread mgmt
  interfaces
- graceful recovery from I/O errors within flows
- updated perf interface to return metadata access statistics
- various bmi_tcp optimizations (cut down on system calls)
- fixes to bmi_tcp cpu utilization
- dynamic traffic graphs added to Karma
- improved cleanup from messaging errors in client libraries
- added ability to report partial errors with details from mgmt interface
- revisited locking approach in jobs, flows, and bmi_gm
- new config file option to control default Trove sync behavior (metadata)
- pvfs2-genconfig update to generate default sync'd metadata sync mode
- added experimental metadata mode (nosync, instead of sync) for allowing
  unsync'd operations to occur that reads from dirty memory (written but
  non-committed data) to help enhance performance 
- graceful shutdown when server gets ctrl-c (SIGINT)
- pvfs2-ls output and argument bugfixes and better error reporting
- handle allocator fix to no longer return invalid handles if no valid
  ranges have been registered
- improved server version reporting and exit path (using --version/-v)
- vfs kernel module warning removal (code without proper locks held)
- fixed vfs bug that assigned incorrect link counts on new entries
- fixed vfs bug that used uninitialized data structures when compiled
  without kernel debugging support
- fixed vfs bug that didn't properly initialize root inode's handle/fs_id
- fixed vfs bug that failed to adjust file position on files opened for
  append
- fixed vfs bug that didn't properly rebuild attributes of files that
  could cause erroneous type changes in the vfs
- fixed vfs bug that could not remove directories with more than 32
  entries in them
- fixed potential vfs race regarding op queueing with a lock re-ordering
- improved error reporting of error codes from pvfs2 through the vfs
- improved error reporting and detection in the configuration parser
- optimized server flush operation to only flush either metadata or data,
  depending on the object being worked on
- test/server/showconfig output improvements
- properly clean up meta and data handles during sys_create if the
  crdirent step fails
- make pvfs2-import check if the target file exists before attempting to
  create it
- pvfs2-fs-dump output improvements (made more readable)
- added test/kernel/linux-2.6/pvfs2-shell-test.sh that is useful for
  running some simple vfs tests on a mounted pvfs2 volume
- added configure option to allow the karma gui to not be built
- fixed a bug that would not allow sysint initialization if the user does
  not have write permission in the current directory
- properly cache attributes at create and write time instead of waiting
  until the first read is done


pvfs2-0.0.9
============
- added karma administration (new gtk+ gui) for interactive
  monitoring of pvfs2 servers (statistics and performance)
- fix support for creating/using/removing multiple collections
  (file systems) within a storage space
- improved pvfs2-client backgrounding (better descriptor management)
- pvfs2-ls improvements for handling multiple mount points specified on
  the same command line
- capture some more data in the mgmt server statfs object, pvfs2-statfs
  program update
- add kernel support for being an nfs exportable file system
- add kernel support for being able to mount more than one pvfs2 volume
- misc code cleanups and removals all over
- test/client/sysint program bugfixes and cleanups
- pvfstab parsing bugfix
- pvfs2-ping and pvfs2-statfs support for multiple file systems
- improved server error reporting if failure occurs before backgrounding
- fix hang on server shutdown via signal
- new maint script (pvfs2smdot.pl) for generating a graphical representation
  of the state machines and transitions (dotty format)
- updates to state machine syntax, including support for comments and
  explicit termination of state machines
- initial work on ability to gracefully cancel pending I/O operations 
  within the system
- sync and truncate bug fixes
- mpi-io-test reports variance among processes
- fix potential bug in le-bytefield encoder
- use correct compiler flags with Intel cc
- fixed and enhanced the pvfs2-mkspace program for creating/removing
  collections and storage spaces
- adjusted all gossip masks to have a standard prefix

	
pvfs2-0.0.8
===========
- many alpha platform improvements, including configure check passes,
  compilation fixes, and vfs fixes (alignment/overflow bugs)
- pvfs2-genconfig quiet mode improvements
- removed extraneous sample server configuration files from source tree
  (can now be generated at compile time)
- kernel mmap/readahead cache improvements and bug fixes
- improved pvfs2-server signal handling, error reporting, and handling
- added a configure/compile time option for allowing function backtraces
  on critical errors (see ./configure --help) and backtrace documentation
  for analyzing what they mean (see doc/coding/)
- properly implement the rmdir operation through the kernel interface
- improved dbpf-attr-cache error handling and serious bug fixes (race
  condition and potential memory corruption fixes)
- race condition fixes on the trove dbpf-thread code, job thread manage,
  and job desc queueing code
- a complete re-write of client side system interface lookup operation
  that now handles path components such as '.' and '..' and allows better
  absolute and relative recursive symlink resolution, including a new
  client debugging keyword/level specific to the lookup operation
- added a symlink test to the pts test suite
- added some test shell scripts to the test/client/sysint directory,
  mostly useful for stressing the new lookup operation
- kernel and client side i/o path improvements that now gracefully handle
  errors such as the case of i/o happening on a file that is removed by
  another process
- implemented a previously unimplemented kernel method (inode:getattr)
- pvfs2-client command line parsing bug fix (no longer crashes on invalid
  args)
- improvements to several test programs (in test/client/sysint)
- removed several files and function that are no longer needed
- on disk storage format is now versioned
- bound acache size, while it's only holding invalid entries and growing
  too large
- powerpc file size listing fixed in pvfs2-ls
- added appendices to quickstart to cover a few more scenarios
- more sanity checks in remove path (in particular for directories)
- reorganized thread management for kernel / userspace communication used
  by pvfs2-client
- some pvfs2-ls bug fixes


pvfs2-0.0.7
===========
- re-worked architecture of metadata storage (generic dspace attrs are
  used instead of a separate keyval/data pair)
- added a server-side (trove-dbpf) attribute write-through caching layer
  for caching generic attributes and keyval/data pairs that are user
  configurable
- added a readahead data cache specifically for vfs mmap-read and
  execution, improving their performance greatly (running, editing,
  compiling, etc on a pvfs2 volume is now much more responsive)
- fix size reporting using 'du' through the vfs interface
- GNU/Linux PowerPC 32bit support, including the 2.6.x kernel interface
- updated pvfs2-genconfig to account for new config file format
- fixed an I/O bug that caused data access problems on some multiple
  I/O server configurations
- removed extra berkeley db error reporting since it's not integrated with
  our gossip error reporting system.  can now be explicitly enabled using
  a new configure option --with-berkdb-debug
- fixes to state machine compiler to workaround hangs on some machines
- new scripts in maint/build for building and testing PVFS2
- better balancing (randomization) of metadata server selection when
  creating new files and directories
- various error msg cleanups (in several components)
- mutex locking improvements, allowing support for NPTL thread
  implementations and also improving performance for some operations
- fixed a bug in client side lookup that can cause nested entries across
  multiple meta servers to work incorrectly (does not affect kernel
  interface)


pvfs2-0.0.6
===========
- improved kernel truncate support
- fixed kernel ioctl return values
  (so that 'tar -xv[z|j]f' can work on pvfs2 volumes)
- minor configuration file format changes
- improved performance monitoring framework
- pvfs2-vis-bw-2d tool for server throughput monitoring
- many symbol name cleanups
- removal of deprecated code
- kernel inode link count fixes
- bucketized (single indirection) 'on-disk' representation of
  bstream and keyval files in the host storage space
- a pvfs2_rmspace (opposite of mkspace); can be invoked by server
  using the -r command line option
- added kernel module highmem support
- renamed attribute cache 'pcache' to 'acache'
- large file support bug fixes
- improved client sysint rename implementation (state-machine)
- improved signal handling in pvfs2-client
- switch to a new protocol encoder which translates requests and
  responses into a machine-independent format, allowing
  interoperability between 32- and 64-bit machines and little-
  and big-endian machines.
	
	
pvfs2-0.0.5
===========
- clean compilation on 64-bit machines
- vfs stability improvements during I/O, including across client restarts
- statfs reporting improvements (closer to correct)
- sysint remove method fix to properly clean up datafiles
- partial path symlink resolution support
- vfs symlink resolution/following support (including partial path)
- added sysint parameter to sys_lookup that dictates if the final
  object on lookup should be resolved if it's a symlink
- runtime options to choose request encoder (see pvfs2tab man page)
- new, much faster, default flow protocol
- streamlined support for threaded and non-threaded server builds


pvfs2-0.0.4
===========
- improved truncate support (pcache usage/integration)
- kernel truncate support (improved file size reporting)
- removed several run-time verbose (expected) warnings
- fixed a handle rollover bug in extentlist handler
- fixed bit-rotted non-threaded trove/job compilation
- improved client sysint readdir implementation (state-machine)
- improved client sysint mkdir implementation (state-machine)
- improved client sysint setattr implementation (state-machine)
- improved client sysint lookup implementation (state-machine)
- symlink resolution/following support
- multiple metadata server configurations are now supported
- pvfs2-genconfig can now generate multiple metadata server configurations
- pav and pvfs2-genconfig now run in 'perl -w' mode w/o any warnings
- added event logging framework, instrumented a few code paths
- example tools to manage event log (pvfs2-set-eventmask and
  pvfs2-event-mon-example)
- started some example perf monitor visualization tools, src/apps/vis subdir
- new network encoding for heterogeneous systems (le-bytefield)
- env variable to set client side debugging level

	
pvfs2-0.0.3
===========
- more pts tests for pvfs2 datatypes
- ability to specify flowprotocol in pvfs2tab file per fs
- truncate implementation
- new flow design document
- statfs implementation
- rewritten mgmt interface, and several new functions
- pvfs2-statfs admin tool
- configurable handle timeout on server
- fixed symbol name collisions with pvfs1
- better sigpipe handling
- added backtrace feature to gossip_lerr()
- non interactive mode for pvfs2-genconfig
- request scheduler support for timer events
- server performance counters
- mgmt functions and example tool (pvfs2-perf-mon-example) for gathering
  real time performance statistics from servers
- added CREDITS file
- addition of PAV (PVFS auto volume) tool for automated test runs
- kernel rename() improvements
- import of mpi-io-test program
- redhat style rc script for server
- addition of administrative mode for servers 
- pvfs2-set-mode admin tool to toggle admin mode for file system
- mgmt API hooks necessary for fsck and dumping fs
- beginning of pvfs2-fs-dump tool, that can show file system structure
  and potential problems, optional dotty output
- "make dist" build target
- removal of depricated test programs
- man pages for many admin tools etc.
- new/updated quickstart, users guide, and status document, README, and INSTALL
- removal of depricated design documents
- request scheduler support for batch/list operations
- many many many bug fixes and code cleanups
- vfs mmap and execution support (read-only)

	
pvfs2-0.0.2
===========
- server side memory leaks almost entirely eliminated                         
- configuration file options for specifying BMI and Flow modules              
- job level thread management optimizations                                   
- integration of a buffer cache into tree (not yet hooked up)                 
- support for symlinks                                                        
- support for vfs symlinks (can exist; can't be followed)                     
- symlink attributes are now able to be added to the pcache                   
- BMI infiniband driver merged in
- new pvfstab format and parsing code
- kernel module reports big block size on stat
- job api changes to prevent client side race conditions
- improved I/O path attribute caching


pvfs2-0.0.1
==========
- limited initial public release

