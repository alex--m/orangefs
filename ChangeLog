-----------------------
PVFS2 Release ChangeLog
-----------------------


pvfs2-0.6.2pre1
===============
- 


pvfs2-0.6.1
===========
- misc. updates to msgpairarray and associated tools to allow for
  server side use
- reorganization of server request parameters so that more (but not
  all yet) are stored in a centralized table
- removed some deprecated test programs
- new pint-util.[ch] to contain utility functions shared between
  client and server
- some refactoring of server state machines (mainly crdirent) to allow
  for code reuse in other state machines
- no longer need to fix up generated html by hand
- fixed a bug that allowed an open through the vfs without the O_CREAT
  and O_EXCL flags to return -EEXIST (should be success in that case)
- added a file_open.c test program that tests opens in various modes
- error code cleanups (added PVFS_EACCES mapping to EACCES; moved
  PVFS_EDETAIL to be a non-errno error code)
- fixed pvfs2-ls to properly convert reported file times in user's
  configured system localtime, rather than in UTC
- fixed the kernel module information so that modinfo doesn't report
  many duplicate entries
- fixed server pidfile usage (-p cmdline option)
- fixed msgpair retries to properly delay between retry attempts
- added trove hooks to be able to peek at handles that will be
  allocated later
- cleaned up the remove state machine and removed an unnecessary
  allocation/copy
- fixed existing acache usage in the sysint calls to be more uniform;
  removed some overhead in the sysint
- fixed kernel device close to be aware if mounts are still active
- added more tests to pvfs2-shell-test that test deeply nested
  subdirectories
- added a method to determine the min handle recycle time across all
  configured servers' file systems
- changed code formatting rules to use spaces rather than tabs in vim
- fixed bug that didn't reload the cached config information on file
  system removal (i.e. unmounts)
- added a cmdline argument to pvfs2-client to specify the acache
  timeout to use at run-time (default is 0 milliseconds, which is
  effectively disabled).  this timeout is upper bounded by the min
  handle recycle time across all servers, and it can change
  dynamically as new mounts come and go
- fixed a bug that allowed servers to create internal storage objects
  outside of the meta handle ranges in some circumstances
- replace single element msgpair/array setup code where possible with
  a macro


pvfs2-0.6.0
===========
- removed pvfs2-import and pvfs2-export in favor of pvfs2-cp
- added compile time option for disabling thread-safety in the client
  library (enabled by default; --disable-thread-safety to disable)
- improved configure summary information emitted at configure time
- added missing non-blocking sysint declarations to sysint header
- made sysint test and testsome() calls more useable
- merged dev unexp polling/handling with system interface
- added PINT_sys_dev_unexp call that allows posting unexpected device
  messages so that they can be returned from the sysint testsome
  method in addition to completed sysint operations
- added a id_gen_fast_unregister macro that is a no op, to make the
  api more consistent with the id_gen_safe_* calls
- modified device driver to work properly in non-blocking mode from
  userspace by implementing the character device poll method and
  modified the pint-dev device interface to make sure it can handle
  the pvfs2 device in a non-blocking manner; added a no immediate
  completion option to the device interface; made test more efficient
  by not polling if no idle time is specified; check for poll errors;
  use proper buffer sizes for reads across the device
- added a method to free the mapped memory region on pvfs2-client-core
  shutdown (valgrind complained)
- modified all job uses of the id-generator to use the safe, rather
  than fast, methods (useful for several reasons including safe
  cancellation of already completed operations)
- modified the job_dev_unexp method to have (and honor) the no
  immediate completion flag if passed (used in the pvfs2-client-core)
- re-wrote pvfs2-client-core to use sysint non-blocking operations
- improved human readable size reporting
- allow human readable size reporting to optionally use si units
- added --si option to pvfs2-ls (similar to ls's --si option)
- added -H option to pvfs2-statfs (similar to du's -H option)
- added a method able to cancel I/O operations in progress
- removed kernel ability to kill device file on cancelled I/O
- added the ability of sys-io.sm to handle run-time cancellation while
  still transitioning properly
- added support in the pvfs2-client for ignoring an upcall retry for
  an op already in progress (as opposed to servicing it multiple
  times)
- added kernel method that allows the cancellation upcall/downcall
  cycle to progress, ignoring the fact that a signal is pending (since
  the only time a cancellation is issued is when there's a signal
  pending)
- fixed kernel oops on setattr (signal) interruption by returning a
  valid error code in this case
- full acache cleanup, bugfixes, and thread-safety support
- allow the sysint post() method to complete an op if finished
  (i.e. all states are immed. completion) by adding it to the
  completion list (which test/testsome can retrieve)
- removed 'cached' attribute fields from getattr_sm object
- removed mostly duplicated code from shared-state-methods.c
- added support (testing only) for building a threaded client library
- gracefully terminate thread-mgr testing threads on errors (this is
  only really useful for graceful shutdown of the threaded client
  library)
- added a set_info option to bmi that tells it to be more aggressive
  when cancelling operations (bmi_tcp will now close sockets)
- fixed kernel bugs that didn't release the bufmap indices in use on
  some error paths (eventually caused all of them to be permanently
  used which caused hangs on I/O)
- extended msgpairarray code to only retry msgpairs that haven't
  completed already
- increased kernel module single operation timeout to be 60 seconds
  instead of 30 seconds (note: as a side-effect this also extends the
  amount of time you'll have to wait on interrupted operations via
  signal for now)
- added PVFS_strerror_r; an equivalent to strerror_r (the thread-safe
  strerror call) that handles PVFS_error codes
- added a simple file_write test program (tests are not in releases)
- always delay for 1 second before spawning the pvfs2-client-core from
  within the pvfs2-client to avoid filling dmesg with harmful looking
  errors while restarting (and re-opening the device file)
- new trove component called dbpf-open-cache that caches open file
  descriptors and db references; replaces dbpf-bstream-fd-cache,
  dbpf-dspace-db-cache, and dbpf-keyval-db-cache; fixes a few long
  standing file size and attribute bugs
- added a few missing admin tools to make install target
- more attribute debugging messages or server
- added admin utility program pvfs2-chown
- added make lib/pvfs2-threaded.a target that can be used to build a
  multithreaded version of the pvfs2 client library
- thread safety for dynamic activation of bmi methods
- fixed makefile LD selection and html docs target
- fixed bmi deadlock that appears in multithreaded library
- fixed responsiveness of pvfs2 kernel driver device poll
- added new option to BMI called BMI_FORCEFUL_CANCEL_MODE to serve as
  a hint to modules to be more aggressive when cancelling operation
  (i.e., tell tcp to always close sockets when cancelling)
- renamed pint-bucket component to pint-cached-config
- enabled pint-cached-config on server side
- unified how autogenerated .c files are tracked across client and
  server builds
- fixed distclean for release tarballs so that it does not destroy .c
  files that cannot be regenerated without full cvs source
- moved msgpairarry from client code to common code and made many
  adjustments to enable general usage; linked into server
- misc. msgpairarray cleanups
- removed depricated PINT_client_bmi_cancel() function
- updated state machine compiler to allow multiple machine definitions
  per file
- added new null job type that can be used to manually trigger
  asynchronous state machine transitions
- refactored server side functions used to start state machines that
  are not tied to incoming requests
- refactored server crdirent state machine using nested state machines
  and a little bit clearer error handling
- added job functionality to reset timeout timer on pending jobs
- removed old "contig" encoder from source tree
- added new "cancel" debugging mask to look at job timeout behavior
- documentation updates: a new high availability document, faq update,
  guide update, manpages
- moved exported pvfs2-util string functions to private str-utils
- added permission checking debugging mask and keyword to debug what
  the server is doing on permission granting or failure
- modified cosmetic output of admin tool pvfs2-set-debugmask
- make sure pvfs2-client doesn't cause a hang on ssh logout due to
  improperly closed fds; this was fixed in the past but unfixed to
  report exec failures.  we can't do that anymore with this setup, so
  we'll have to either require an absolute path to the client
  (preferred), or scan the PATH ourself to be sure it can be found; or
  log to a file like the server
- added debugging regarding the handle re-use timeout
- increased the default handle re-use timeout from 45 to 360 seconds
- removed redefinition of the default handle timeout constant
- change permissions to reasonable defaults on newly created
  directories using pvfs2-mkdir
- extended pvfs2-cp to preserve src to dest permissions where
  applicable
- extended pvfs2-cp to allow symlinks to be copied to and from pvfs2
  (as the link target file, not as a link -- similar to normal 'cp')
- extended pvfs2-cp to truncate target files if they exist
- added a threaded vfs test program to perform heavy I/O on a single
  file
- fixed pvfs2-server to continue processing after recoverable
  BMI_testcontext errors
- added some gossip debugging along the acache code path
- kernel bugfixes:
  - don't attempt to shrink the sb's dcache on device close in the
    case that the sb has not yet been filled
  - translate error codes that occurred while waiting for the
    downcall, rather than assuming an error came back from the
    downcall (in the case that it didn't); fixes a possible oops on
    invalid mounts
  - use fully 64-bit op tags instead of relying on unreliable casts
    and assumptions moving from kernel space to userspace; changes use
    of an atomic_t type to a spinlock protected int64_t; works on ppc
    without problems now
- changed pre-posted write_ack recv posting to have an infinite
  timeout that is reset on flow completion to avoid timeouts before
  operation completion
- fixed crash bugs on (unexpected) job expiration in various places
- fixed crash bugs when an invalid (or unsupported) encoding type is
  specified by reporting the error to the user, and the completing the
  operation if possible by cycling through the valid encoders
- added pvfs2tab support for the line encoding=default


pvfs2-0.5.1
===========
- added a pidfile option to pvfs2-server for init script integration
- auto-tuned BMI timeout to poll during activity, sleep a bit
  otherwise
- pay attention to BMI timeouts in IB layer
- fail quitely on unrecognized BMI method types in pvfs2tab
- disabled TCP method for IB builds
- added pvfs2-cp, which should have all of the functionaly of
  pvfs2-import and pvfs2-export, but none of the bugs (!)
- bug fixed to idle detection logic in job.c (non-threaded case)
- some tweaks to BMI timeout behavior
- removal of some deprecated BMI code
- bug fixed that caused problem when trying to add an invalid mount
  entry
- bug fixed when trying to add general dynamic mount entries
- distribution framework cleanups
- updated test programs and pts test harness to use new distribution
  code
- bug fixed that allows i/o attempts on non-datafiles to be handled
- bug fixed that caused breakage on the verbose debugging mask
- implemented non-blocking client library calls for all sysint and
  most mgmt operations
- changed all credential arguments to credential references
- export id-generator methods for sysint users
- removed pvfs2-threaded-client-core application from code base
- added pvfs2-mkdir program
- added pvfs2-cp program (soon to replace both pvfs2-import &
  pvfs2-export)
- added a GPL license notice in the top level files for the kernel
  module
- moved cached configuration information our of the configuration
  object
- allow server setattr operations to be performed even if write access
  on the object being modified is not granted (fixes utime failures
  and misc other permission problems like untarring some files)
- kernel bugfixes:
  - fixed an oops on cancelled object operations (file,dir,symlink)
  - fixed kernel error codes in several places
  - fixed a memory leak that didn't free symlink targets
  - replaced new_inode call with iget to avoid the possibility of
    duplicate inodes with the same number in the vfs
  - fixed kernel create mode translation when creating new objects
- kernel 2.4.x. support introduced (supports 2.4.19 and up)
- allow pvfs2-client to restart on device open failure
- updated quickstart with the following information:
  - gcc 2.96 or above is required (as gcc 2.95 generates buggy code)
  - how to use the kernel interface under 2.4.19 or above
- misc cleanups, error handling, and debugging


pvfs2-0.5.0
===========
- consolidate msgpair and msgpairarray implementations
- bug fixed in "make kmod" path handling
- added ability to build kernel module and test programs to
  pvfs2-build.sh
- added scripts (from Justin Luck) for nightly vfs testing
- started nightly vfs testing (see pvfs2-testing mailing list)
- implemented job cancel api
- added job timeouts, and started using in both client & server
- added ability to (manually) reconnect after transient failure in
  bmi_tcp
- allow queueing of receives for failed bmi_tcp addresses that may get
  reconnected
- removed some depricated client library code
- started using PVFS_ECANCEL rather than PVFS_EINTR for cancelled
  operations
- added bmi address reference counting
- allow server to discard anonymous bmi addresses after connection has
  been closed (to conserve resources)
- removed test subdirectory from distributed releases
- cleanup of protocol version mismatch error messages, including a way
  to propigate errors detected on server back to client
- fixed db cursor leak in trove
- fixed for busy spin condition in client library when retrying
  operations
- various cleanups to error handling in msgpairarray code
- added some shell script testing and bonnie++ testing to automated
  tests
- fixed pvfs2-ls handling of large usernames
- fixed kernel bug that allowed you to remove the module while in use
- kernel bufmap general I/O path improvements
- increase the default size of the server-side attribute cache
  (configurable in pvfs2-genconfig)
- randomize the file system IDs generated by pvfs2-genconfig
- internal id-generator code enhancements
- fixed a gcc compilation warning on older versions
- added a new error code system that allows the addition of addition
  pvfs2 specific error codes for use within the system
- added logic to automatically retry sends and receives of network
  operations on communication failure
- proper unposting and cleanup of posted recvs that are no longer
  needed
- added high level retry logic for system operations to help tolerate
  transient server failures
- fixed truncate operation to properly return error code and not
  operate on anything that's not regular file
- added a chdirent server operation that replaces an existing dirent
  and returns the old (useful for renames where the target exists)
- refactored the client side remove state machine so that it can be
  used by both the remove and rename client operations
- general cleanups and improvements to the client side rename
  operation


pvfs2-0.1.3
===========
- added event logging to request encoder, server state machines, and
  most job calls
- some changes to the event logging mask system
- some new test programs for event logging
- fixed flow protocol handling of zero byte request processing results
- moved pvfs2-client* to src/apps/kernel/linux-2.6
- added an independent configure and make setup for test subdirectory
- removed all dependencies on test subdirectory from src subdirectory
- properly report if the pvfs2-client fails to execute the core
  program
- reworked the error code handling in the kernel module to better
  match the userspace pvfs2 error codes
- handle kernel mount attempts that fail without crashing
- added support for the pvfs2-client-core to request that the kernel
  module pass all of the mount information it knows about back to the
  client so that a client restart can seamlessly pick up from where it
  left off
- added a client/kernel umount operation that removes dynamic mount
  entries
- properly report symlink types in the pvfs2-ls tool
- fixed karma from hanging on start due to a previous api change
- reworked the client side system interface to be able to handle
  dealing with multiple server configuration files at once
- kernel now supports multiple mount points from different servers
- kernel mount option parsing improvements and error handling
- fixed broken configure options: --enable-karma and --disable-karma
- better error handling and synchronization in the kernel module
- fixed a kernel crash if pvfs2-client-core was restarted while
  another process was attempting to do I/O
- added a mechanism for ensuring that remount operations are serviced
  first by the pvfs2-client-core on restart, rather than failing all
  pending operations until the mount tables are built
- reworked the dbpf-attr-cache to use both fs_id and handle as the
  lookup key to allow it to work properly when multiple file systems
  are mounted
- fixed a kernel crash bug that tried to overwrite pages at invalid
  offsets on read error


pvfs2-0.1.2
===========
- BMI IB module:
    - fix bug resulting in mixed-up connections
    - clean up incoming message processing
    - refactor test and testcontext code
    - simplify state machine
- add shared and static libraries build options
- honor PVFS2_DEBUGFILE environment variable in client
- Kernel module builds:
    - build the module with everything else, if configured
    - clean up properly
    - work out-of-tree
- Build system:
    - list explicit include directories
    - add cflags provided by module makefile stubs
    - install kernel module if configured
    - simplify dependency generator script, add .po
- BMI: initialize needed methods dynamically, not at startup
- add ability to force use of alternative pvfs2tab file at run time
- general cleanup of API used for system interface initialization,
  including tabfile parsing
- added reserved value for fsid type to indicate uninitialized value
- BMI and flow interfaces now accept NULL list of modules to
  initialize defaults, BMI interprets this by delaying init of modules
  until needed, flow interface interprets by initializing all possible
  modules
- new api functions for resolving local file system paths
- added ability to dynamically add and remove file systems from the
  system interface at run time
- fix request scheduler bug that was leading to odd behavior under
  heavy I/O load
- added some scripts started by Wes Emeneker to automated the steps
  needed to download and build ROMIO with PVFS2 support
- re-enable compilation of Jiesheng's caching flow protocol
- added new automated nightly test scripts started by Wes Emeneker
  into test/automated subdir
- started running automated tests on Adenine cluster at Clemson as a
  nightly cron job
- isolated a request processing corner case with a test program
- renamed PVFS_pinode_reference -> PVFS_object_ref to cleanup the
  system interface a little further
- added some first stubs for hooks to specify distribution parameters
  at runtime
- added more specific server and client side debugging keywords
- enhanced vfs error reporting
- client sysint cleanups and error reporting improvements
- server operation cleanups and error reporting improvements
- bmi error code translation hooks to work properly with pvfs2 error
  codes
- fixed mmap-ra-cache bug that didn't flush data at the right times
- made the mmap readahead cache functionality a configure option
  (enabled by default)
- fixed vfs bug that caused multiple processes accessing the same file
  trigger a SIGBUS on file close
- enhanced vfs test pvfs2-shell-test.sh to test a tricky case of
  filling and emptying the page cache repeatedly in a worst case
  scenario
- start client sysint thread safety by making accesses to the global
  configuration object serialized
- reworked the vfs statfs method to not cause overflows on some
  kernels
- re-introduced a client sysint lookup optimization to work with the
  overhauled client lookup operation
- fixed size reporting of symlinks in pvfs2-ls program
- fixed vfs getattr calls for directories and symlinks
- added an experimental testbed program for testing threaded client
  sysint operations based on the pvfs2-client-core (called
  pvfs2-threaded-client-core)
- mostly consolidated credential generation to one place
- modified the kernel mount and initialization to use the dynamic
  mount system, where a server and file system name is specific on the
  mount command line (no more hard coded coll_id and root_handle!)
- fixed a particularly nasty vfs race bug that could crash the kernel
  during writes
- fixed a vfs bug that could cause a client to think a file did not
  exist when in fact it did
- added full support for dynamic vfs mount (which breaks the old way
  of mounting, but is more convenient and makes more sense)
- Better documentation for building MPICH2+ROMIO+PVFS2


pvfs2-0.1.1
===========
- can now specify Trove sync behavior when setting up PVFS2 volumes w/
  pav
- added a new mpi-io test to exercise ROMIO's scalable operations
- better detection of dead sockets in BMI TCP/IP module
- fixed pvfs2tab file parsing bug
- completely rewritten TCP/IP socket management
- fixed potential server deadlock on shutdown bugs
- fixed vfs bug that stalled the server on signal cancelled operations
- enhance vfs support to ignore non-fatal signals caught while waiting
  for a remote operation to complete
- added support for the "intr" mount option to allow any signal to
  interrupt remote operations (similar to the nfs option)
- enhanced test/kernel/linux-2.6/pvfs2-shell-test.sh test script to
  test mmap reads and allow more run-time flexibility


pvfs2-0.1.0
===========
- initial support for logging traces with both MPE and Pablo libraries
- fix some warnings on x86-64
- work around older Berkeley-DB versions w/o support for DB_DIRTY_READ
- implementation of cancel() in BMI, Trove, Flow, and thread mgmt
  interfaces
- graceful recovery from I/O errors within flows
- updated perf interface to return metadata access statistics
- various bmi_tcp optimizations (cut down on system calls)
- fixes to bmi_tcp cpu utilization
- dynamic traffic graphs added to Karma
- improved cleanup from messaging errors in client libraries
- added ability to report partial errors with details from mgmt
  interface
- revisited locking approach in jobs, flows, and bmi_gm
- new config file option to control default Trove sync behavior
  (metadata)
- pvfs2-genconfig update to generate default sync'd metadata sync mode
- added experimental metadata mode (nosync, instead of sync) for
  allowing unsync'd operations to occur that reads from dirty memory
  (written but non-committed data) to help enhance performance
- graceful shutdown when server gets ctrl-c (SIGINT)
- pvfs2-ls output and argument bugfixes and better error reporting
- handle allocator fix to no longer return invalid handles if no valid
  ranges have been registered
- improved server version reporting and exit path (using --version/-v)
- vfs kernel module warning removal (code without proper locks held)
- fixed vfs bug that assigned incorrect link counts on new entries
- fixed vfs bug that used uninitialized data structures when compiled
  without kernel debugging support
- fixed vfs bug that didn't properly initialize root inode's
  handle/fs_id
- fixed vfs bug that failed to adjust file position on files opened
  for append
- fixed vfs bug that didn't properly rebuild attributes of files that
  could cause erroneous type changes in the vfs
- fixed vfs bug that could not remove directories with more than 32
  entries in them
- fixed potential vfs race regarding op queueing with a lock
  re-ordering
- improved error reporting of error codes from pvfs2 through the vfs
- improved error reporting and detection in the configuration parser
- optimized server flush operation to only flush either metadata or
  data, depending on the object being worked on
- test/server/showconfig output improvements
- properly clean up meta and data handles during sys_create if the
  crdirent step fails
- make pvfs2-import check if the target file exists before attempting
  to create it
- pvfs2-fs-dump output improvements (made more readable)
- added test/kernel/linux-2.6/pvfs2-shell-test.sh that is useful for
  running some simple vfs tests on a mounted pvfs2 volume
- added configure option to allow the karma gui to not be built
- fixed a bug that would not allow sysint initialization if the user
  does not have write permission in the current directory
- properly cache attributes at create and write time instead of
  waiting until the first read is done


pvfs2-0.0.9
============
- added karma administration (new gtk+ gui) for interactive monitoring
  of pvfs2 servers (statistics and performance)
- fix support for creating/using/removing multiple collections (file
  systems) within a storage space
- improved pvfs2-client backgrounding (better descriptor management)
- pvfs2-ls improvements for handling multiple mount points specified
  on the same command line
- capture some more data in the mgmt server statfs object,
  pvfs2-statfs program update
- add kernel support for being an nfs exportable file system
- add kernel support for being able to mount more than one pvfs2 volume
- misc code cleanups and removals all over
- test/client/sysint program bugfixes and cleanups
- pvfstab parsing bugfix
- pvfs2-ping and pvfs2-statfs support for multiple file systems
- improved server error reporting if failure occurs before backgrounding
- fix hang on server shutdown via signal
- new maint script (pvfs2smdot.pl) for generating a graphical
  representation of the state machines and transitions (dotty format)
- updates to state machine syntax, including support for comments and
  explicit termination of state machines
- initial work on ability to gracefully cancel pending I/O operations
  within the system
- sync and truncate bug fixes
- mpi-io-test reports variance among processes
- fix potential bug in le-bytefield encoder
- use correct compiler flags with Intel cc
- fixed and enhanced the pvfs2-mkspace program for creating/removing
  collections and storage spaces
- adjusted all gossip masks to have a standard prefix

	
pvfs2-0.0.8
===========
- many alpha platform improvements, including configure check passes,
  compilation fixes, and vfs fixes (alignment/overflow bugs)
- pvfs2-genconfig quiet mode improvements
- removed extraneous sample server configuration files from source
  tree (can now be generated at compile time)
- kernel mmap/readahead cache improvements and bug fixes
- improved pvfs2-server signal handling, error reporting, and handling
- added a configure/compile time option for allowing function
  backtraces on critical errors (see ./configure --help) and backtrace
  documentation for analyzing what they mean (see doc/coding/)
- properly implement the rmdir operation through the kernel interface
- improved dbpf-attr-cache error handling and serious bug fixes (race
  condition and potential memory corruption fixes)
- race condition fixes on the trove dbpf-thread code, job thread
  manage, and job desc queueing code
- a complete re-write of client side system interface lookup operation
  that now handles path components such as '.' and '..' and allows
  better absolute and relative recursive symlink resolution, including
  a new client debugging keyword/level specific to the lookup
  operation
- added a symlink test to the pts test suite
- added some test shell scripts to the test/client/sysint directory,
  mostly useful for stressing the new lookup operation
- kernel and client side i/o path improvements that now gracefully
  handle errors such as the case of i/o happening on a file that is
  removed by another process
- implemented a previously unimplemented kernel method (inode:getattr)
- pvfs2-client command line parsing bug fix (no longer crashes on
  invalid args)
- improvements to several test programs (in test/client/sysint)
- removed several files and function that are no longer needed
- on disk storage format is now versioned
- bound acache size, while it's only holding invalid entries and
  growing too large
- powerpc file size listing fixed in pvfs2-ls
- added appendices to quickstart to cover a few more scenarios
- more sanity checks in remove path (in particular for directories)
- reorganized thread management for kernel / userspace communication
  used by pvfs2-client
- some pvfs2-ls bug fixes


pvfs2-0.0.7
===========
- re-worked architecture of metadata storage (generic dspace attrs are
  used instead of a separate keyval/data pair)
- added a server-side (trove-dbpf) attribute write-through caching
  layer for caching generic attributes and keyval/data pairs that are
  user configurable
- added a readahead data cache specifically for vfs mmap-read and
  execution, improving their performance greatly (running, editing,
  compiling, etc on a pvfs2 volume is now much more responsive)
- fix size reporting using 'du' through the vfs interface
- GNU/Linux PowerPC 32bit support, including the 2.6.x kernel
  interface
- updated pvfs2-genconfig to account for new config file format
- fixed an I/O bug that caused data access problems on some multiple
  I/O server configurations
- removed extra berkeley db error reporting since it's not integrated
  with our gossip error reporting system.  can now be explicitly
  enabled using a new configure option --with-berkdb-debug
- fixes to state machine compiler to workaround hangs on some machines
- new scripts in maint/build for building and testing PVFS2
- better balancing (randomization) of metadata server selection when
  creating new files and directories
- various error msg cleanups (in several components)
- mutex locking improvements, allowing support for NPTL thread
  implementations and also improving performance for some operations
- fixed a bug in client side lookup that can cause nested entries
  across multiple meta servers to work incorrectly (does not affect
  kernel interface)


pvfs2-0.0.6
===========
- improved kernel truncate support
- fixed kernel ioctl return values (so that 'tar -xv[z|j]f' can work
  on pvfs2 volumes)
- minor configuration file format changes
- improved performance monitoring framework
- pvfs2-vis-bw-2d tool for server throughput monitoring
- many symbol name cleanups
- removal of deprecated code
- kernel inode link count fixes
- bucketized (single indirection) 'on-disk' representation of bstream
  and keyval files in the host storage space
- a pvfs2_rmspace (opposite of mkspace); can be invoked by server
  using the -r command line option
- added kernel module highmem support
- renamed attribute cache 'pcache' to 'acache'
- large file support bug fixes
- improved client sysint rename implementation (state-machine)
- improved signal handling in pvfs2-client
- switch to a new protocol encoder which translates requests and
  responses into a machine-independent format, allowing
  interoperability between 32- and 64-bit machines and little- and
  big-endian machines.
	
	
pvfs2-0.0.5
===========
- clean compilation on 64-bit machines
- vfs stability improvements during I/O, including across client
  restarts
- statfs reporting improvements (closer to correct)
- sysint remove method fix to properly clean up datafiles
- partial path symlink resolution support
- vfs symlink resolution/following support (including partial path)
- added sysint parameter to sys_lookup that dictates if the final
  object on lookup should be resolved if it's a symlink
- runtime options to choose request encoder (see pvfs2tab man page)
- new, much faster, default flow protocol
- streamlined support for threaded and non-threaded server builds


pvfs2-0.0.4
===========
- improved truncate support (pcache usage/integration)
- kernel truncate support (improved file size reporting)
- removed several run-time verbose (expected) warnings
- fixed a handle rollover bug in extentlist handler
- fixed bit-rotted non-threaded trove/job compilation
- improved client sysint readdir implementation (state-machine)
- improved client sysint mkdir implementation (state-machine)
- improved client sysint setattr implementation (state-machine)
- improved client sysint lookup implementation (state-machine)
- symlink resolution/following support
- multiple metadata server configurations are now supported
- pvfs2-genconfig can now generate multiple metadata server
  configurations
- pav and pvfs2-genconfig now run in 'perl -w' mode w/o any warnings
- added event logging framework, instrumented a few code paths
- example tools to manage event log (pvfs2-set-eventmask and
  pvfs2-event-mon-example)
- started some example perf monitor visualization tools, src/apps/vis
  subdir
- new network encoding for heterogeneous systems (le-bytefield)
- env variable to set client side debugging level

	
pvfs2-0.0.3
===========
- more pts tests for pvfs2 datatypes
- ability to specify flowprotocol in pvfs2tab file per fs
- truncate implementation
- new flow design document
- statfs implementation
- rewritten mgmt interface, and several new functions
- pvfs2-statfs admin tool
- configurable handle timeout on server
- fixed symbol name collisions with pvfs1
- better sigpipe handling
- added backtrace feature to gossip_lerr()
- non interactive mode for pvfs2-genconfig
- request scheduler support for timer events
- server performance counters
- mgmt functions and example tool (pvfs2-perf-mon-example) for
  gathering real time performance statistics from servers
- added CREDITS file
- addition of PAV (PVFS auto volume) tool for automated test runs
- kernel rename() improvements
- import of mpi-io-test program
- redhat style rc script for server
- addition of administrative mode for servers 
- pvfs2-set-mode admin tool to toggle admin mode for file system
- mgmt API hooks necessary for fsck and dumping fs
- beginning of pvfs2-fs-dump tool, that can show file system structure
  and potential problems, optional dotty output
- "make dist" build target
- removal of depricated test programs
- man pages for many admin tools etc.
- new/updated quickstart, users guide, and status document, README,
  and INSTALL
- removal of depricated design documents
- request scheduler support for batch/list operations
- many many many bug fixes and code cleanups
- vfs mmap and execution support (read-only)

	
pvfs2-0.0.2
===========
- server side memory leaks almost entirely eliminated                         
- configuration file options for specifying BMI and Flow modules              
- job level thread management optimizations                                   
- integration of a buffer cache into tree (not yet hooked up)                 
- support for symlinks                                                        
- support for vfs symlinks (can exist; can't be followed)                     
- symlink attributes are now able to be added to the pcache                   
- BMI infiniband driver merged in
- new pvfstab format and parsing code
- kernel module reports big block size on stat
- job api changes to prevent client side race conditions
- improved I/O path attribute caching


pvfs2-0.0.1
==========
- limited initial public release
