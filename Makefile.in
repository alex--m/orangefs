srcdir = @srcdir@
VPATH = $(srcdir)
SHELL = @SHELL@
INSTALL = @INSTALL@

.SUFFIXES:
.PHONY: all clean tests distclean tmp_server_objs

# main source subdirectories
#
# To build up our MODULES line, we search the build tree for
# the module.mk files that were created by configure.
#
MODULES := $(shell find . -iname "*.mk" | sed -e 's/^.\///;s/module.mk//')

CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LD = gcc
CFLAGS +=\
 -D__STATIC_METHOD_BMI_TCP__\
 -D__STATIC_FLOWPROTO_DEFAULT__\
 -D__STATIC_FLOWPROTO_BMI_TROVE__\
 -Wconversion -Wall -Wstrict-prototypes -pipe -I $(srcdir)/include
LDFLAGS += -L lib
LIBS += -lpvfs2
# here we differentiate cflags between some components
LIBCFLAGS = -D__GEN_NULL_LOCKING__
SERVERCFLAGS = -D__GEN_POSIX_LOCKING__
# add all module directories into include path
CFLAGS += $(patsubst %, -I $(srcdir)/%, $(MODULES))


#
# SRCFILES is a list of source files that need to be generated
# before we get going.  This is kind of a hack, and we should
# try to find a better way to take care of it.
#
SRCFILES := src/io/trove/trove-autogen.c
LIBRARIES := lib/libpvfs2.a
TESTSRC :=
LIBSRC :=
SERVERSRC :=

all: $(LIBRARIES) tests tmp_server_objs

include $(patsubst %, %/module.mk, $(MODULES))

LIBOBJS := $(patsubst %.c,%.o, $(filter %.c,$(LIBSRC)))
LIBDEPENDS := $(patsubst %.c,%.d, $(filter %.c,$(LIBSRC)))

TESTOBJS := $(patsubst %.c,%.o, $(filter %.c,$(TESTSRC)))
TESTS := $(patsubst %.c,%, $(filter %.c, $(TESTSRC)))
TESTDEPENDS := $(patsubst %.c,%.d, $(filter %.c,$(TESTSRC)))

SERVEROBJS := $(patsubst %.c,%-server.o, $(filter %.c,$(SERVERSRC)))
SERVERDEPENDS := $(patsubst %.c,%.d, $(filter %.c,$(SERVERSRC)))

# we don't really care if the dependencies are sorted; 
# this is just a trick to remove duplicate entries
DEPENDS := $(sort $(LIBDEPENDS) $(TESTDEPENDS) $(SERVERDEPENDS))

tests: $(TESTS)

# TODO: this rule is temporary to force the building of objects to
# be used in the server until we have a server target; remove this
# later
tmp_server_objs: $(SERVEROBJS)

lib/libpvfs2.a: $(LIBOBJS)
	$(INSTALL) -d lib
	ar rcs $@ $(LIBOBJS)

# NEW DEFAULT RULE FOR BUILDING EXECUTABLES FROM .O FILES
%: %.o $(LIBRARIES)
	$(LD) $(LDFLAGS) $< $(LIBS) -o $@

#
# NOTE: NOT SURE IF IT IS IMPORTANT FOR THIS RULE TO BE
# FIRST OR NOT...SHOULD LEARN THE MATCHING RULES BETTER.
#
%-server.o: %.c
	$(CC) $(SERVERCFLAGS) $(CFLAGS) $< -c -o $@

%.o: %.c
	$(CC) $(LIBCFLAGS) $(CFLAGS) $< -c -o $@

$(TESTS): %: %.o $(LIBRARIES)

clean:
	rm -f $(LIBOBJS) $(TESTOBJS) $(SERVEROBJS) $(TESTS) $(LIBRARIES) \
		$(DEPENDS) src/io/trove/trove-autogen.c

distclean: clean
	find . -name "module.mk" -exec rm \{\} \;

-include $(DEPENDS)

%.d: %.c $(SRCFILES)
	$(srcdir)/maint/depend.sh `dirname $*` $(CFLAGS) $< > $@
